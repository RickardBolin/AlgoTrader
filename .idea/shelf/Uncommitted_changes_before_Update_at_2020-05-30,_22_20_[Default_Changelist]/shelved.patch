Index: frontend/algorithms.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import sys\nsys.path.append(\"..\")\n\nimport os\n\nimport tkinter as tk\nfrom matplotlib.backends.backend_tkagg import FigureCanvasTkAgg, NavigationToolbar2Tk\nfrom matplotlib.figure import Figure\nfrom pandas.plotting import register_matplotlib_converters\nregister_matplotlib_converters()\nfrom backend import stock_data as sd\n\nfrom tkfilterlist import FilterList\n\nclass AlgorithmWindow:\n\n    def __init__(self, root):\n        self.root = root\n        self.PlotWindow = PlotWindow(root)\n        self.AlgorithmBox = AlgorithmBox(root, self)\n        self.Buttons = Buttons(root)\n    \n    def update_plot(self, event):\n        \n        item = self.AlgorithmBox.stock_list.selection()\n        print(item)\n        self.PlotWindow.a.set_title(item)\n        self.PlotWindow.canvas.draw()\n\n\nclass PlotWindow:\n\n    def __init__(self, root):\n\n        self.root = root\n        self.stock_frame = tk.Frame(self.root)\n        self.stock_frame.pack(side=\"left\", anchor=tk.NW)\n\n        # Initialize stock window with Apple stock data\n        self.figure = Figure(figsize=(5, 5), dpi=100)\n        self.a = self.figure.add_subplot(111)\n        self.a.set_title(\"Chosen algoritmh\")\n        self.canvas = FigureCanvasTkAgg(self.figure, self.stock_frame)\n        self.canvas.draw()\n        self.canvas.get_tk_widget().pack(fill=tk.BOTH, expand=True)\n\n\n\nclass Buttons:\n\n    def __init__(self, root):\n        self.root = root\n        self.button_frame = tk.Frame(self.root, width=30, height=10)\n        self.button_frame.pack(anchor=tk.SE)\n\n        self.stock_entry = tk.Entry(self.button_frame)\n        self.stock_entry.grid(row=0, column=1)\n\n        self.search_button = tk.Button(self.button_frame, text=\"Search\")\n        self.search_button.grid(row=0)\n        self.search_button.bind(\"<Button-1>\", self.search_stock)\n\n    def search_stock(self, event):\n        stock = self.stock_entry.get()\n        StockPlot.update_stock(stock)\n\n\nclass AlgorithmBox:\n\n    def __init__(self, root, parent):\n        self.parent = parent\n        self.root = root\n        self.stock_list_frame = tk.Frame(self.root)\n        self.stock_list_frame.pack(anchor=tk.NE)\n\n        files = os.listdir(\"../algorithms\")\n        self.stock_list = FilterList(self.stock_list_frame,\n                source=files,\n                display_rule=lambda item: item,\n                filter_rule=lambda item, text:\n                            item.lower().startswith(text.lower()))\n        \n        self.stock_list.bind('<Return>', self.parent.update_plot)\n        self.stock_list.pack(side=\"top\", expand=1, fill=\"both\")\n        self.stock_list.focus_set()\n        \n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- frontend/algorithms.py	(revision 4d886e97a89f3601969a7475ba3781ef01156a43)
+++ frontend/algorithms.py	(date 1590870034884)
@@ -83,4 +83,4 @@
         self.stock_list.bind('<Return>', self.parent.update_plot)
         self.stock_list.pack(side="top", expand=1, fill="both")
         self.stock_list.focus_set()
-        
+
